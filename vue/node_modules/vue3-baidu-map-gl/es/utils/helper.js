const notNullish = (val) => val != null;
const assert = (condition, ...infos) => {
    if (!condition)
        console.warn(...infos);
};
const toString = Object.prototype.toString;
const isObject = (val) => toString.call(val) === '[object Object]';
const now = () => Date.now();
const timestamp = () => +Date.now();
const clamp = (n, min, max) => Math.min(max, Math.max(min, n));
// eslint-disable-next-line @typescript-eslint/no-empty-function
const noop = () => { };
const rand = (min, max) => {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min + 1)) + min;
};
const hasOwn = (val, key) => Object.prototype.hasOwnProperty.call(val, key);

export { assert, clamp, hasOwn, isObject, noop, notNullish, now, rand, timestamp };
