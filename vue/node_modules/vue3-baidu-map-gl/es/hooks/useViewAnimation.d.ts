import { type Point } from '../utils';
export interface ViewAnimationKeyFrames {
    /**
     * 	地图中心点，默认值为地图当前状态中心点
     */
    center: Point;
    /**
     * 	地图缩放级别，默认值为地图当前状态缩放级别
     */
    zoom?: number;
    /**
     * 	地图倾斜角度，默认值为地图当前状态倾斜角度
     */
    tilt?: number;
    /**
     * 	地图旋转角度，默认值为地图当前旋转角度
     */
    heading?: number;
    /**
     * 	表示当前关键帧处于动画过程的百分比，取值范围0~1
     */
    percentage: number;
}
export interface UseViewAnimationOptions {
    /**
     * 	动画开始延迟时间，单位ms，默认0
     */
    delay?: number;
    /**
     * 	动画持续时间，单位ms，默认1000
     */
    duration?: number;
    /**
     * 循环次数，参数类型为数字时循环固定次数，参数为'INFINITE'无限循环，默认为1
     */
    loop?: number | 'INFINITE';
    /**
     * 动画播放时禁止鼠标拖动
     */
    disableDragging?: boolean;
}
declare type AnimationListenerType = 'animationstart' | 'animationiterations' | 'animationend' | 'animationcancel';
declare type AnimationStatus = 'PLAYING' | 'STOPPING' | 'INITIAL';
export declare function useViewAnimation(map: any, options: UseViewAnimationOptions): {
    viewAnimation: {
        addEventListener(event: AnimationListenerType, cal: BMapGL.Callback): void;
        removeEventListener(event: AnimationListenerType, cal: BMapGL.Callback): void;
    };
    start: () => void;
    cancel: () => void;
    stop: () => void;
    proceed: () => void;
    status: import("vue").Ref<AnimationStatus>;
    setKeyFrames: (keyFrames: ViewAnimationKeyFrames[]) => void;
};
export {};
