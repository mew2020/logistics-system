import { Ref } from 'vue';
import { type Point } from '../utils';
export interface UseBrowserLocationOptions {
    /**
     * 是否开启SDK辅助定位，仅当使用环境为移动web混合开发，且开启了定位sdk辅助定位功能后生效
     */
    enableSDKLocation?: boolean;
    /**
     * 是否要求浏览器获取最佳效果，同浏览器定位接口参数。默认为false
     */
    enableHighAccuracy?: boolean;
    /**
     * 超时事件，单位为毫秒。默认为10秒
     */
    timeout?: number;
    /**
     * 允许返回指定事件内的缓存结果，单位为毫秒。如果为0，则每次请求都获取最新的定位结果。默认为10分钟
     */
    maximumAge?: number;
    /**
     * 是否开启SDK辅助定位
     */
    SDKLocation?: boolean;
}
export declare type BrowserLocationStatus = 'BMAP_STATUS_SUCCESS' | 'ERR_PERMISSION_DENIED' | 'ERR_POSITION_UNAVAILABLE' | 'ERR_POSITION_TIMEOUT';
interface Location {
    accuracy: number;
    point: Point;
    address: {
        country: string;
        city: string;
        city_code: string;
        district: string;
        province: string;
        street: string;
        street_number: string;
    };
}
export declare function useBrowserLocation(options?: UseBrowserLocationOptions | null, cal?: (location: Ref<Location>) => void): {
    get: () => void;
    isLoading: Ref<boolean>;
    isError: Ref<boolean>;
    status: Ref<BrowserLocationStatus | undefined>;
    location: Ref<{
        accuracy: number;
        point: {
            lng: number;
            lat: number;
            equals: (other: BMapGL.Point) => boolean;
        } | {
            lng: number;
            lat: number;
        };
        address: {
            country: string;
            city: string;
            city_code: string;
            district: string;
            province: string;
            street: string;
            street_number: string;
        };
    }>;
};
export {};
