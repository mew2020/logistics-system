import { Ref } from 'vue';
import { Callback, type Point } from '../../../utils';
export declare type GroundOverlayUrl = string | HTMLCanvasElement | Ref<HTMLCanvasElement | string> | (() => HTMLCanvasElement | Ref<HTMLCanvasElement | string>);
export interface GroundOverlayProps {
    type: 'video' | 'canvas' | 'image';
    url: GroundOverlayUrl;
    startPoint: Point;
    endPoint: Point;
    autoCenter?: boolean;
    opacity?: number;
    /**
     * 是否可见
     */
    visible?: boolean;
    onClick?: Callback;
    onDblclick?: Callback;
    onMousemove?: Callback;
    onMouseover?: Callback;
    onMouseout?: Callback;
}
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<GroundOverlayProps>, {
    autoCenter: boolean;
    opacity: number;
    visible: boolean;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("initd" | "unload" | "mouseover" | "mouseout" | "click" | "dblclick" | "mousemove")[], "initd" | "unload" | "mouseover" | "mouseout" | "click" | "dblclick" | "mousemove", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<GroundOverlayProps>, {
    autoCenter: boolean;
    opacity: number;
    visible: boolean;
}>>> & {
    onInitd?: ((...args: any[]) => any) | undefined;
    onUnload?: ((...args: any[]) => any) | undefined;
    onClick?: ((...args: any[]) => any) | undefined;
    onDblclick?: ((...args: any[]) => any) | undefined;
    onMousemove?: ((...args: any[]) => any) | undefined;
    onMouseout?: ((...args: any[]) => any) | undefined;
    onMouseover?: ((...args: any[]) => any) | undefined;
}, {
    visible: boolean;
    autoCenter: boolean;
    opacity: number;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
declare type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
declare type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
declare type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
declare type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
declare type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
