import { defineComponent, ref, watch, openBlock, createElementBlock } from 'vue';
import useParentComponentEffect from '../../hooks/useParentComponentEffect';
import { warn, getPoint, bindEvents } from '../../utils';

var script = /*#__PURE__*/ defineComponent(Object.assign({
    name: 'BAutoComplete'
}, { __name: 'index', props: {
        location: { type: null, required: false },
        types: { type: Array, required: false },
        onSearchComplete: { type: null, required: false },
        onHighlight: { type: null, required: false },
        onConfirm: { type: null, required: false }
    }, emits: ['initd', 'unload', 'searchComplete', 'highlight', 'confirm'], setup(__props, { emit: vueEmits }) {
        const props = __props;
        const autoCompleteInput = ref();
        let autoComplete;
        const { ready } = useParentComponentEffect((map) => {
            if (!autoCompleteInput.value)
                warn('BAutoComplete', 'render error');
            const { location, types } = props;
            let _location = map;
            if (typeof location === 'object' && location.lat && location.lng) {
                _location = getPoint(location);
            }
            autoComplete = new BMapGL.Autocomplete({
                location: _location,
                onSearchComplete: (e) => vueEmits('searchComplete', e),
                input: autoCompleteInput.value,
                types
            });
            bindEvents(props, vueEmits, autoComplete);
            ready(map, autoComplete);
            watch(() => props.location, (n) => {
                let _location = map;
                if (typeof n === 'object' && n.lat && n.lng) {
                    _location = getPoint(n);
                }
                autoComplete.setLocation(_location);
            });
            watch(() => props.types, (n) => {
                n && autoComplete.setTypes(n);
            });
        });
        return (_ctx, _cache) => {
            return (openBlock(), createElementBlock("input", {
                class: "b-auto-complete-input",
                type: "text",
                ref_key: "autoCompleteInput",
                ref: autoCompleteInput,
                placeholder: "请输入搜索关键词"
            }, null, 512 /* NEED_PATCH */));
        };
    } }));

script.__file = "packages/components/autoComplete/index.vue";

export { script as default };
