import { defineComponent, ref, watch, openBlock, createElementBlock, createElementVNode, mergeProps, renderSlot } from 'vue';
import useParentComponentEffect from '../../../hooks/useParentComponentEffect';
import { warn } from '../../../utils';

const _hoisted_1 = { style: { "display": "none" } };
var script = /*#__PURE__*/ defineComponent(Object.assign({
    name: 'BControl',
    inheritAttrs: false
}, { __name: 'index', props: {
        anchor: { type: null, required: false, default: 'BMAP_ANCHOR_TOP_LEFT' },
        offset: { type: Object, required: false, default: () => ({ x: 83, y: 18 }) },
        visible: { type: Boolean, required: false, default: true }
    }, emits: ['initd', 'unload'], setup(__props) {
        const props = __props;
        const controlContainer = ref();
        const { ready } = useParentComponentEffect((map) => {
            if (!controlContainer.value) {
                if (process.env.NODE_ENV !== 'production') {
                    warn('BControl', 'container el render error');
                }
                return;
            }
            const { offset, anchor, visible } = props;
            const customControl = new BMapGL.Control();
            customControl.defaultAnchor = window[anchor];
            customControl.defaultOffset = new BMapGL.Size(offset.x, offset.y);
            customControl.initialize = (_map) => {
                return _map.getContainer().appendChild(controlContainer.value);
            };
            visible && map.addControl(customControl);
            ready(map, customControl);
            watch(() => props.visible, (n) => {
                map[n ? 'addControl' : 'removeControl'](customControl);
            });
            return () => map.removeControl(customControl);
        });
        return (_ctx, _cache) => {
            return (openBlock(), createElementBlock("div", _hoisted_1, [
                createElementVNode("div", mergeProps({
                    ref_key: "controlContainer",
                    ref: controlContainer
                }, _ctx.$attrs), [
                    renderSlot(_ctx.$slots, "default")
                ], 16 /* FULL_PROPS */)
            ]));
        };
    } }));

script.__file = "packages/components/control/control/index.vue";

export { script as default };
