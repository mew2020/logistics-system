import { defineComponent, watch } from 'vue';
import useParentComponentEffect from '../../../hooks/useParentComponentEffect';

var script = /*#__PURE__*/ defineComponent(Object.assign({
    name: 'BCityList'
}, { __name: 'index', props: {
        anchor: { type: null, required: false, default: 'BMAP_ANCHOR_TOP_LEFT' },
        offset: { type: Object, required: false, default: () => ({ x: 18, y: 18 }) },
        expand: { type: Boolean, required: false, default: false },
        visible: { type: Boolean, required: false, default: true }
    }, emits: ['initd', 'unload'], setup(__props) {
        const props = __props;
        let cityListControl;
        const { ready } = useParentComponentEffect((map) => {
            const { visible, expand, offset, anchor } = props;
            cityListControl = new BMapGL.CityListControl({
                expand: expand,
                offset: new BMapGL.Size(offset.x, offset.y),
                anchor: window[anchor]
            });
            visible && map.addControl(cityListControl);
            ready(map, cityListControl);
            watch(() => props.visible, (n) => {
                map[n ? 'addControl' : 'removeControl'](cityListControl);
            });
            return () => map.removeControl(cityListControl);
        });
        return (_ctx, _cache) => {
            return null;
        };
    } }));

script.__file = "packages/components/control/city-list/index.vue";

export { script as default };
