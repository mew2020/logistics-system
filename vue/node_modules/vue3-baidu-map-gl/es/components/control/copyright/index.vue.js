import { defineComponent, ref, getCurrentInstance, warn, watch, onUpdated, openBlock, createElementBlock, createElementVNode, mergeProps, renderSlot } from 'vue';
import useParentComponentEffect from '../../../hooks/useParentComponentEffect';

const copyrightControlPosCacheMap = {};

const _hoisted_1 = { style: { "display": "none" } };
var script = /*#__PURE__*/ defineComponent(Object.assign({
    name: 'BCopyright',
    inheritAttrs: false
}, { __name: 'index', props: {
        anchor: { type: null, required: false, default: 'BMAP_ANCHOR_BOTTOM_RIGHT' },
        offset: { type: Object, required: false, default: () => ({ x: 83, y: 18 }) },
        visible: { type: Boolean, required: false, default: true }
    }, emits: ['initd', 'unload'], setup(__props) {
        var _a;
        const props = __props;
        const copyrightContainer = ref();
        let copyrightControl;
        const uid = (_a = getCurrentInstance()) === null || _a === void 0 ? void 0 : _a.uid;
        const { ready } = useParentComponentEffect((map) => {
            const { anchor, offset, visible } = props;
            if (!copyrightContainer.value) {
                if (process.env.NODE_ENV !== 'production') {
                    warn('BCopyright', 'container el render error');
                }
                return;
            }
            let mapBounds = map.getBounds();
            // 同一位置的 copyright 应该调用 addCopyright, 防止多个 copyright 重叠
            if (!(copyrightControl = copyrightControlPosCacheMap[anchor])) {
                copyrightControl = new BMapGL.CopyrightControl({
                    offset: new BMapGL.Size(offset.x, offset.y),
                    anchor: window[anchor]
                });
                copyrightControlPosCacheMap[anchor] = copyrightControl;
                map.addControl(copyrightControl);
            }
            if (visible) {
                copyrightControl.addCopyright({
                    id: uid,
                    content: copyrightContainer.value.innerHTML,
                    bounds: mapBounds
                });
            }
            ready(map, copyrightControl);
            watch(() => props.visible, (n) => {
                if (n) {
                    copyrightContainer.value &&
                        copyrightControl.addCopyright({
                            id: uid,
                            content: copyrightContainer.value.innerHTML,
                            bounds: mapBounds
                        });
                }
                else {
                    uid && copyrightControl.removeCopyright(uid);
                }
            });
            return () => {
                var _a, _b;
                const cacheCopyright = copyrightControlPosCacheMap[anchor];
                const getCopyrightCollection = (_a = cacheCopyright === null || cacheCopyright === void 0 ? void 0 : cacheCopyright.getCopyrightCollection) === null || _a === void 0 ? void 0 : _a.bind(cacheCopyright);
                if (getCopyrightCollection && ((_b = getCopyrightCollection()) === null || _b === void 0 ? void 0 : _b.length) > 1) {
                    cacheCopyright.removeCopyright(uid);
                }
                else {
                    map.removeControl(cacheCopyright);
                    Reflect.deleteProperty(copyrightControlPosCacheMap, anchor);
                }
            };
        });
        onUpdated(() => {
            if (!copyrightControl)
                return;
            let copyright = copyrightControl.getCopyright(uid);
            if (copyright && copyrightContainer.value && copyright.content !== copyrightContainer.value.innerHTML) {
                copyrightControl.addCopyright({
                    id: uid,
                    content: copyrightContainer.value.innerHTML,
                    bounds: copyright.bounds
                });
            }
        });
        return (_ctx, _cache) => {
            return (openBlock(), createElementBlock("div", _hoisted_1, [
                createElementVNode("div", mergeProps({
                    ref_key: "copyrightContainer",
                    ref: copyrightContainer
                }, _ctx.$attrs), [
                    renderSlot(_ctx.$slots, "default")
                ], 16 /* FULL_PROPS */)
            ]));
        };
    } }));

script.__file = "packages/components/control/copyright/index.vue";

export { script as default };
