import { type ControlAnchor, type LengthUnit } from '../../../utils';
export interface ScaleProps {
    /**
     * 控件的停靠位置
     */
    anchor?: ControlAnchor;
    /**
     * 控件的偏移值
     */
    offset?: {
        x: number;
        y: number;
    };
    /**
     * 比例尺单位制
     */
    unit?: LengthUnit;
    /**
     * 是否可见
     */
    visible?: boolean;
}
declare const _default: import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<ScaleProps>, {
    anchor: string;
    offset: () => {
        x: number;
        y: number;
    };
    unit: string;
    visible: boolean;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("initd" | "unload")[], "initd" | "unload", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<ScaleProps>, {
    anchor: string;
    offset: () => {
        x: number;
        y: number;
    };
    unit: string;
    visible: boolean;
}>>> & {
    onInitd?: ((...args: any[]) => any) | undefined;
    onUnload?: ((...args: any[]) => any) | undefined;
}, {
    anchor: ControlAnchor;
    visible: boolean;
    offset: {
        x: number;
        y: number;
    };
    unit: LengthUnit;
}, {}>;
export default _default;
declare type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
declare type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
declare type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
declare type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
