import {
  onUnmounted,
  provide,
  ref,
  watch
} from "./chunk-AA5IK4IP.js";
import {
  __export,
  __reExport
} from "./chunk-K532NZMW.js";

// node_modules/vue3-baidu-map-gl/es/index.js
var es_exports = {};
__export(es_exports, {
  BAutoComplete: () => default25,
  BBezierCurve: () => default16,
  BCircle: () => default19,
  BCityList: () => default6,
  BContextMenu: () => default22,
  BControl: () => default3,
  BCopyright: () => default8,
  BDistrictLayer: () => default23,
  BGroundOverlay: () => default21,
  BInfoWindow: () => default18,
  BLabel: () => default14,
  BLocation: () => default7,
  BMap: () => default2,
  BMapMask: () => default24,
  BMarker: () => default12,
  BMarker3d: () => default13,
  BNavigation3d: () => default9,
  BPanoramaControl: () => default10,
  BPanoramaCoverageLayer: () => default11,
  BPolygon: () => default17,
  BPolyline: () => default15,
  BPrism: () => default20,
  BScale: () => default4,
  BZoom: () => default5,
  CoordinatesFromType: () => CoordinatesFromType,
  CoordinatesToType: () => CoordinatesToType,
  DistrictType: () => DistrictType,
  default: () => vue3BaiduMapGl,
  install: () => install,
  useAddressGeocoder: () => useAddressGeocoder,
  useAreaBoundary: () => useAreaBoundary,
  useBrowserLocation: () => useBrowserLocation,
  useDefaultMarkerIcons: () => useDefaultMarkerIcons,
  useInstanceId: () => useInstanceId,
  useIpLocation: () => useIpLocation,
  usePoint: () => usePoint,
  usePointConvertor: () => usePointConvertor,
  usePointGeocoder: () => usePointGeocoder,
  useTrackAnimation: () => useTrackAnimation,
  useViewAnimation: () => useViewAnimation,
  version: () => version
});

// node_modules/vue3-baidu-map-gl/es/components/map/index.js
var map_exports = {};
__export(map_exports, {
  BMap: () => default2
});
__reExport(map_exports, index_star);
import * as index_star from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/map/index.vue.js";
import { default as default2 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/map/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/control/control/index.js
var control_exports = {};
__export(control_exports, {
  BControl: () => default3
});
__reExport(control_exports, index_star2);
import * as index_star2 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/control/control/index.vue.js";
import { default as default3 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/control/control/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/control/scale/index.js
var scale_exports = {};
__export(scale_exports, {
  BScale: () => default4
});
__reExport(scale_exports, index_star3);
import * as index_star3 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/control/scale/index.vue.js";
import { default as default4 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/control/scale/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/control/zoom/index.js
var zoom_exports = {};
__export(zoom_exports, {
  BZoom: () => default5
});
__reExport(zoom_exports, index_star4);
import * as index_star4 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/control/zoom/index.vue.js";
import { default as default5 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/control/zoom/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/control/city-list/index.js
var city_list_exports = {};
__export(city_list_exports, {
  BCityList: () => default6
});
__reExport(city_list_exports, index_star5);
import * as index_star5 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/control/city-list/index.vue.js";
import { default as default6 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/control/city-list/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/control/location/index.js
var location_exports = {};
__export(location_exports, {
  BLocation: () => default7
});
__reExport(location_exports, index_star6);
import * as index_star6 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/control/location/index.vue.js";
import { default as default7 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/control/location/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/control/copyright/index.js
var copyright_exports = {};
__export(copyright_exports, {
  BCopyright: () => default8
});
__reExport(copyright_exports, index_star7);
import * as index_star7 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/control/copyright/index.vue.js";
import { default as default8 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/control/copyright/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/control/navigation3d/index.js
var navigation3d_exports = {};
__export(navigation3d_exports, {
  BNavigation3d: () => default9
});
__reExport(navigation3d_exports, index_star8);
import * as index_star8 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/control/navigation3d/index.vue.js";
import { default as default9 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/control/navigation3d/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/control/panorama-control/index.js
var panorama_control_exports = {};
__export(panorama_control_exports, {
  BPanoramaControl: () => default10
});
__reExport(panorama_control_exports, index_star9);
import * as index_star9 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/control/panorama-control/index.vue.js";
import { default as default10 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/control/panorama-control/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/layer/panorama-coverage/index.js
var panorama_coverage_exports = {};
__export(panorama_coverage_exports, {
  BPanoramaCoverageLayer: () => default11
});
__reExport(panorama_coverage_exports, index_star10);
import * as index_star10 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/layer/panorama-coverage/index.vue.js";
import { default as default11 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/layer/panorama-coverage/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/overlay/marker/index.js
var marker_exports = {};
__export(marker_exports, {
  BMarker: () => default12
});
__reExport(marker_exports, index_star11);
import * as index_star11 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/marker/index.vue.js";
import { default as default12 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/marker/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/overlay/marker3d/index.js
var marker3d_exports = {};
__export(marker3d_exports, {
  BMarker3d: () => default13
});
__reExport(marker3d_exports, index_star12);
import * as index_star12 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/marker3d/index.vue.js";
import { default as default13 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/marker3d/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/overlay/label/index.js
var label_exports = {};
__export(label_exports, {
  BLabel: () => default14
});
__reExport(label_exports, index_star13);
import * as index_star13 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/label/index.vue.js";
import { default as default14 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/label/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/overlay/polyline/index.js
var polyline_exports = {};
__export(polyline_exports, {
  BPolyline: () => default15
});
__reExport(polyline_exports, index_star14);
import * as index_star14 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/polyline/index.vue.js";
import { default as default15 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/polyline/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/overlay/bezierCurve/index.js
var bezierCurve_exports = {};
__export(bezierCurve_exports, {
  BBezierCurve: () => default16
});
__reExport(bezierCurve_exports, index_star15);
import * as index_star15 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/bezierCurve/index.vue.js";
import { default as default16 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/bezierCurve/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/overlay/polygon/index.js
var polygon_exports = {};
__export(polygon_exports, {
  BPolygon: () => default17
});
__reExport(polygon_exports, index_star16);
import * as index_star16 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/polygon/index.vue.js";
import { default as default17 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/polygon/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/overlay/infowindow/index.js
var infowindow_exports = {};
__export(infowindow_exports, {
  BInfoWindow: () => default18
});
__reExport(infowindow_exports, index_star17);
import * as index_star17 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/infowindow/index.vue.js";
import { default as default18 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/infowindow/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/overlay/circle/index.js
var circle_exports = {};
__export(circle_exports, {
  BCircle: () => default19
});
__reExport(circle_exports, index_star18);
import * as index_star18 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/circle/index.vue.js";
import { default as default19 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/circle/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/overlay/prism/index.js
var prism_exports = {};
__export(prism_exports, {
  BPrism: () => default20
});
__reExport(prism_exports, index_star19);
import * as index_star19 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/prism/index.vue.js";
import { default as default20 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/prism/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/overlay/ground-overlay/index.js
var ground_overlay_exports = {};
__export(ground_overlay_exports, {
  BGroundOverlay: () => default21
});
__reExport(ground_overlay_exports, index_star20);
import * as index_star20 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/ground-overlay/index.vue.js";
import { default as default21 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/ground-overlay/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/contextMenu/index.js
var contextMenu_exports = {};
__export(contextMenu_exports, {
  BContextMenu: () => default22
});
__reExport(contextMenu_exports, index_star21);
import * as index_star21 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/contextMenu/index.vue.js";
import { default as default22 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/contextMenu/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/layer/district/index.js
var district_exports = {};
__export(district_exports, {
  BDistrictLayer: () => default23
});
__reExport(district_exports, index_star22);
import * as index_star22 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/layer/district/index.vue.js";
import { default as default23 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/layer/district/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/overlay/map-mask/index.js
var map_mask_exports = {};
__export(map_mask_exports, {
  BMapMask: () => default24
});
__reExport(map_mask_exports, index_star23);
import * as index_star23 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/map-mask/index.vue.js";
import { default as default24 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/overlay/map-mask/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components/autoComplete/index.js
var autoComplete_exports = {};
__export(autoComplete_exports, {
  BAutoComplete: () => default25
});
__reExport(autoComplete_exports, index_star24);
import * as index_star24 from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/autoComplete/index.vue.js";
import { default as default25 } from "D:/develop/code/logitstics system/logitstics sys/vue/node_modules/vue3-baidu-map-gl/es/components/autoComplete/index.vue.js";

// node_modules/vue3-baidu-map-gl/es/components.js
var components = [
  default2,
  default3,
  default4,
  default5,
  default9,
  default12,
  default13,
  default8,
  default7,
  default14,
  default15,
  default17,
  default24,
  default16,
  default19,
  default6,
  default20,
  default18,
  default22,
  default10,
  default11,
  default21,
  default23,
  default25
];

// node_modules/vue3-baidu-map-gl/es/hooks/useAreaBoundary.js
function useAreaBoundary(cal) {
  const isLoading = ref(false);
  const boundaries = ref([]);
  let boundaryInstance;
  const getFn = (area) => {
    if (!boundaryInstance) {
      boundaryInstance = new BMapGL.Boundary();
    }
    isLoading.value = true;
    boundaryInstance.get(area, (rs) => {
      isLoading.value = false;
      boundaries.value = rs.boundaries;
      cal && cal(boundaries);
    });
  };
  onUnmounted(() => boundaryInstance = null);
  return {
    /**
     * 是否加载中
     */
    isLoading,
    /**
     * 区域边界数据
     */
    boundaries,
    /**
     * 获取指定区域边界
     * @param {string} area 区域名
     * @example get('北京市')
     */
    get: getFn
  };
}

// node_modules/vue3-baidu-map-gl/es/utils/log.js
function error(location, message) {
  console.error(`[Vue3 BaiduMap GL/${location}]: ${message}`);
}

// node_modules/vue3-baidu-map-gl/es/utils/is.js
function isArray(value) {
  return Object.prototype.toString.call(value) === "[object Array]";
}

// node_modules/vue3-baidu-map-gl/es/utils/types.js
var DistrictType;
(function(DistrictType2) {
  DistrictType2[DistrictType2["PROVINCE"] = 0] = "PROVINCE";
  DistrictType2[DistrictType2["CITY"] = 1] = "CITY";
  DistrictType2[DistrictType2["AREA"] = 2] = "AREA";
})(DistrictType || (DistrictType = {}));

// node_modules/vue3-baidu-map-gl/es/utils/getUid.js
var id = 0;
function getUid() {
  return `${id++}`;
}

// node_modules/vue3-baidu-map-gl/es/utils/proxyValue.js
function proxyValue(target, key, defaultValue, callback) {
  Object.defineProperty(target, key, {
    get() {
      return defaultValue;
    },
    set(value) {
      defaultValue = value;
      callback && callback(defaultValue);
    }
  });
}

// node_modules/vue3-baidu-map-gl/es/hooks/useTrackAnimation.js
var statusMap = {
  1: "PLAYING",
  2: "INITIAL",
  3: "STOPPING"
};
function useTrackAnimation(map, options) {
  let instance;
  let pl;
  let mapComponentInstance;
  let mapInstance;
  const status = ref("INITIAL");
  const _options = options || {};
  let prevStartTimeStamp = void 0;
  watch(() => map.value, (n) => {
    mapComponentInstance = n;
  });
  const init = () => {
    if (!instance) {
      mapInstance = mapComponentInstance.getMapInstance();
      instance = new BMapGLLib.TrackAnimation(mapInstance, pl, _options);
      proxyValue(instance, "_status", instance._status, syncState);
    }
  };
  const setPath = (path) => {
    const point = path.map((pathItem) => new BMapGL.Point(pathItem.lng, pathItem.lat));
    pl = new BMapGL.Polyline(point);
    init();
  };
  const start = () => {
    const now = performance.now();
    const _prevStartTimeStamp = prevStartTimeStamp || 0;
    const _delay = _options.delay || 0;
    if (instance && now - _prevStartTimeStamp > _delay && status.value === "INITIAL") {
      instance.start();
    }
    prevStartTimeStamp = performance.now();
  };
  const cancel = () => {
    if (instance) {
      instance.cancel();
    }
  };
  const stop = () => {
    if (instance) {
      instance.pause();
    }
  };
  const proceed = () => {
    if (instance) {
      instance.continue();
    }
  };
  const syncState = () => {
    if (instance) {
      status.value = statusMap[instance._status];
    }
  };
  onUnmounted(() => {
    if (instance && status.value !== "INITIAL") {
      instance.cancel();
    }
    if (mapInstance) {
      mapInstance.removeOverlay(pl);
      pl = null;
    }
  });
  return {
    /**
     * 设置路径动画路径
     */
    setPath,
    /**
     * 开始动画
     */
    start,
    /**
     * 暂停动画
     */
    stop,
    /**
     * 取消动画
     */
    cancel,
    /**
     * 继续播放动画
     */
    proceed,
    /**
     * 动画状态
     */
    status
  };
}

// node_modules/vue3-baidu-map-gl/es/hooks/usePoint.js
function usePoint() {
  const point = ref(null);
  const genPoint = ({ lng, lat }) => {
    point.value = new BMapGL.Point(lng, lat);
  };
  return {
    /**
     * BMapGL.Point 实例
     */
    point,
    /**
     * 设置实例点坐标
     */
    set: genPoint
  };
}

// node_modules/vue3-baidu-map-gl/es/hooks/useViewAnimation.js
function useViewAnimation(map, options) {
  options = options || {};
  options.disableDragging = options.disableDragging !== void 0 ? false : true;
  const status = ref("INITIAL");
  const eventListener = {
    animationcancel: [() => status.value = "INITIAL"],
    animationend: [() => status.value = "INITIAL"],
    animationstart: [() => status.value = "PLAYING"]
  };
  let mapComponentInstance;
  let mapInstance;
  let initd = false;
  watch(() => map.value, (n) => {
    mapComponentInstance = n;
  });
  const syncDragging = () => {
    const { enableDragging } = mapComponentInstance.getBaseMapOptions();
    mapComponentInstance.setDragging(enableDragging);
  };
  const defaultValue = {
    addEventListener(event, cal) {
      if (!eventListener[event]) {
        eventListener[event] = [];
      }
      eventListener[event].push(cal);
    },
    removeEventListener(event, cal) {
      const subs = eventListener[event];
      if (subs) {
        if (!cal) {
          eventListener[event] = [];
        } else {
          for (let i = subs.length; i >= 0; i--) {
            if (subs[i] === cal) {
              subs.splice(i, 1);
            }
          }
        }
      }
    }
  };
  let viewAnimation = defaultValue;
  const createViewAnimation = (keyFrames) => {
    const { loop, duration, delay } = options;
    for (const keyFrame of keyFrames) {
      if (keyFrame.center) {
        const { lng, lat } = keyFrame.center;
        keyFrame.center = new BMapGL.Point(lng, lat);
      }
    }
    viewAnimation = new BMapGL.ViewAnimation(keyFrames, {
      duration,
      delay,
      interation: loop
    });
    for (const eventKey of Object.keys(eventListener)) {
      const events = eventListener[eventKey];
      if (events && events.length) {
        events.forEach((cal) => {
          viewAnimation.addEventListener(eventKey, cal);
        });
      }
    }
    initd = true;
  };
  const start = () => {
    if (initd && status.value !== "PLAYING") {
      mapInstance = mapComponentInstance.getMapInstance();
      mapInstance.startViewAnimation(viewAnimation);
      mapComponentInstance.setDragging(!options.disableDragging);
    }
  };
  const cancel = () => {
    if (initd && status.value !== "INITIAL") {
      viewAnimation._cancel(mapInstance);
      syncDragging();
    }
  };
  const stop = () => {
    if (initd && status.value === "PLAYING") {
      viewAnimation._pause();
      status.value = "STOPPING";
    }
  };
  const proceed = () => {
    if (initd && status.value === "STOPPING") {
      viewAnimation._continue();
      status.value = "PLAYING";
    }
  };
  onUnmounted(() => {
    try {
      if (viewAnimation && status.value == "INITIAL") {
        mapInstance = mapComponentInstance.getMapInstance();
        viewAnimation._cancel(mapInstance);
        syncDragging();
      }
    } catch (e) {
      return false;
    }
  });
  return {
    viewAnimation,
    start,
    cancel,
    stop,
    proceed,
    status,
    setKeyFrames: createViewAnimation
  };
}

// node_modules/vue3-baidu-map-gl/es/hooks/useIpLocation.js
function useIpLocation(cal) {
  const location = ref({});
  const isLoading = ref(true);
  const init = () => {
    isLoading.value = true;
    new BMapGL.LocalCity().get((res) => {
      isLoading.value = false;
      location.value = {
        code: res.code,
        point: res.center,
        name: res.name
      };
      cal && cal(location);
    });
  };
  return {
    location,
    isLoading,
    get: init
  };
}

// node_modules/vue3-baidu-map-gl/es/hooks/useBrowserLocation.js
var statusMap2 = {
  // 定位成功
  0: "BMAP_STATUS_SUCCESS",
  // 定位超时
  8: "ERR_POSITION_TIMEOUT",
  // 定位不可用
  2: "ERR_POSITION_UNAVAILABLE",
  // 没有权限，定位被拒绝
  6: "ERR_PERMISSION_DENIED"
};
function useBrowserLocation(options, cal) {
  options = options || {};
  const location = ref({});
  const isLoading = ref(true);
  const isError = ref(false);
  const status = ref();
  const init = () => {
    options.SDKLocation = options.enableSDKLocation;
    new Promise((resolve, reject) => {
      isLoading.value = true;
      const geolocation = new BMapGL.Geolocation();
      geolocation.getCurrentPosition(function(res) {
        const _status = geolocation.getStatus();
        status.value = statusMap2[_status];
        if (_status === window["BMAP_STATUS_SUCCESS"]) {
          const { address, accuracy, point } = res;
          resolve({
            accuracy,
            point,
            address
          });
        } else {
          reject();
        }
      }, options);
    }).then((res) => {
      isError.value = false;
      location.value = res;
      cal && cal(location);
    }).catch(() => {
      isError.value = true;
    }).finally(() => {
      isLoading.value = false;
    });
  };
  return {
    get: init,
    isLoading,
    isError,
    status,
    location
  };
}

// node_modules/vue3-baidu-map-gl/es/hooks/useAddressGeocoder.js
function useAddressGeocoder(cal) {
  const point = ref();
  const isLoading = ref(true);
  const isEmpty = ref(true);
  let geocoder;
  const init = () => {
    if (!geocoder) {
      geocoder = new BMapGL.Geocoder();
    }
  };
  const get = (address, city) => {
    init();
    if (!address)
      return error("useAddressGeocoder", "missing required params: address");
    if (!city)
      return error("useAddressGeocoder", "missing required  params: city");
    const isBatch = isArray(address);
    isLoading.value = true;
    (() => {
      if (isBatch) {
        return Promise.all(address.map((item) => getPoint(geocoder, item, city)));
      }
      return getPoint(geocoder, address, city);
    })().then((res) => {
      if (res) {
        if (isBatch) {
          let emptyCount = 0;
          point.value = res.map((item) => {
            emptyCount += +!item;
            return item;
          });
          isEmpty.value = emptyCount === res.length;
        } else {
          point.value = res;
          isEmpty.value = false;
        }
      } else {
        point.value = res;
        isEmpty.value = true;
      }
      cal && cal(point);
    }).catch((err) => {
      error("useAddressGeocoder", err.message);
      isEmpty.value = true;
      point.value = null;
    }).finally(() => {
      isLoading.value = false;
    });
  };
  return {
    get,
    point,
    isLoading,
    isEmpty
  };
}
function getPoint(geocoder, address, city) {
  return new Promise((resolve) => {
    geocoder.getPoint(address, (point) => resolve(point ? point : null), city);
  });
}

// node_modules/vue3-baidu-map-gl/es/hooks/usePointGeocoder.js
function usePointGeocoder(options, cal) {
  options = options || {};
  const result = ref();
  const isLoading = ref(true);
  const isEmpty = ref(true);
  let geocoder;
  const init = (point) => {
    if (!point)
      return error("usePointGeocoder", "missing required params: point");
    if (!geocoder) {
      geocoder = new BMapGL.Geocoder();
    }
    const isBatch = isArray(point);
    isLoading.value = true;
    (() => {
      if (isBatch) {
        return Promise.all(point.map((item) => getAddress(geocoder, item, options)));
      }
      return getAddress(geocoder, point, options);
    })().then((res) => {
      if (res) {
        if (isBatch) {
          let emptyCount = 0;
          result.value = res.map((item) => {
            emptyCount += +!item;
            return item;
          });
          isEmpty.value = emptyCount === res.length;
        } else {
          result.value = res;
          isEmpty.value = false;
        }
      } else {
        result.value = res;
        isEmpty.value = true;
      }
      cal && cal(result);
    }).catch(() => {
      isEmpty.value = true;
      result.value = void 0;
    }).finally(() => {
      isLoading.value = false;
    });
  };
  return {
    get: init,
    result,
    isLoading,
    isEmpty
  };
}
function getAddress(geocoder, point, options) {
  return new Promise((resolve) => {
    geocoder.getLocation(new BMapGL.Point(point.lng, point.lat), (res) => {
      if (res)
        resolve(res);
      else
        resolve(null);
    }, options);
  });
}

// node_modules/vue3-baidu-map-gl/es/hooks/usePointConvertor.js
var CoordinatesFromType;
(function(CoordinatesFromType2) {
  CoordinatesFromType2[CoordinatesFromType2["COORDINATES_WGS84"] = 1] = "COORDINATES_WGS84";
  CoordinatesFromType2[CoordinatesFromType2["COORDINATES_WGS84_MC"] = 2] = "COORDINATES_WGS84_MC";
  CoordinatesFromType2[CoordinatesFromType2["COORDINATES_GCJ02"] = 3] = "COORDINATES_GCJ02";
  CoordinatesFromType2[CoordinatesFromType2["COORDINATES_GCJ02_MC"] = 4] = "COORDINATES_GCJ02_MC";
  CoordinatesFromType2[CoordinatesFromType2["COORDINATES_BD09"] = 5] = "COORDINATES_BD09";
  CoordinatesFromType2[CoordinatesFromType2["COORDINATES_BD09_MC"] = 6] = "COORDINATES_BD09_MC";
  CoordinatesFromType2[CoordinatesFromType2["COORDINATES_MAPBAR"] = 7] = "COORDINATES_MAPBAR";
  CoordinatesFromType2[CoordinatesFromType2["COORDINATES_51"] = 8] = "COORDINATES_51";
})(CoordinatesFromType || (CoordinatesFromType = {}));
var CoordinatesToType;
(function(CoordinatesToType2) {
  CoordinatesToType2[CoordinatesToType2["COORDINATES_GCJ02"] = 3] = "COORDINATES_GCJ02";
  CoordinatesToType2[CoordinatesToType2["COORDINATES_BD09"] = 5] = "COORDINATES_BD09";
  CoordinatesToType2[CoordinatesToType2["COORDINATES_BD09_MC"] = 6] = "COORDINATES_BD09_MC";
})(CoordinatesToType || (CoordinatesToType = {}));
function usePointConvertor() {
  const result = ref();
  const isLoading = ref(true);
  const isError = ref(false);
  const status = ref();
  let convertor;
  const init = (points, from, to) => {
    if (!points)
      return error("usePointConvertor", "missing required params: points");
    if (!from)
      return error("usePointConvertor", "missing required params: from");
    if (!to)
      return error("usePointConvertor", "missing required params: to");
    if (!points.length)
      return;
    if (!convertor) {
      convertor = new BMapGL.Convertor();
    }
    isLoading.value = true;
    const pointsInstance = points.map((item) => new BMapGL.Point(item.lng, item.lat));
    getConvertor(convertor, pointsInstance, from, to).then((res) => {
      result.value = res.points.map((item) => ({ lng: item.lng, lat: item.lat }));
      status.value = res.status;
      isError.value = false;
    }).catch((status2) => {
      status2.value = status2;
      isError.value = true;
    }).finally(() => {
      isLoading.value = false;
    });
  };
  return {
    convert: init,
    result,
    isLoading,
    isError,
    status
  };
}
function getConvertor(convertor, point, from, to) {
  return new Promise((resolve, reject) => {
    convertor.translate(point, from, to, (res) => {
      if (res.status === 0)
        resolve(res);
      else
        reject(res.status);
    });
  });
}

// node_modules/vue3-baidu-map-gl/es/hooks/useDefaultMarkerIcons.js
var icons = null;
function useDefaultMarkerIcons() {
  if (icons !== null)
    return icons;
  const defaultIconUrl = "//mapopen.bj.bcebos.com/cms/react-bmap/markers_new2x_fbb9e99.png";
  icons = {
    simple_red: new BMapGL.Icon(defaultIconUrl, new BMapGL.Size(42 / 2, 66 / 2), {
      imageOffset: new BMapGL.Size(454 / 2, 378 / 2),
      imageSize: new BMapGL.Size(600 / 2, 600 / 2)
    }),
    simple_blue: new BMapGL.Icon(defaultIconUrl, new BMapGL.Size(42 / 2, 66 / 2), {
      imageOffset: new BMapGL.Size(454 / 2, 450 / 2),
      imageSize: new BMapGL.Size(600 / 2, 600 / 2)
    }),
    loc_red: new BMapGL.Icon(defaultIconUrl, new BMapGL.Size(46 / 2, 70 / 2), {
      imageOffset: new BMapGL.Size(400 / 2, 378 / 2),
      imageSize: new BMapGL.Size(600 / 2, 600 / 2)
    }),
    loc_blue: new BMapGL.Icon(defaultIconUrl, new BMapGL.Size(46 / 2, 70 / 2), {
      imageOffset: new BMapGL.Size(400 / 2, 450 / 2),
      imageSize: new BMapGL.Size(600 / 2, 600 / 2)
    }),
    start: new BMapGL.Icon(defaultIconUrl, new BMapGL.Size(50 / 2, 80 / 2), {
      imageOffset: new BMapGL.Size(400 / 2, 278 / 2),
      imageSize: new BMapGL.Size(600 / 2, 600 / 2)
    }),
    end: new BMapGL.Icon(defaultIconUrl, new BMapGL.Size(50 / 2, 80 / 2), {
      imageOffset: new BMapGL.Size(450 / 2, 278 / 2),
      imageSize: new BMapGL.Size(600 / 2, 600 / 2)
    }),
    location: new BMapGL.Icon(defaultIconUrl, new BMapGL.Size(28 / 2, 40 / 2), {
      imageOffset: new BMapGL.Size(248 / 2, 466 / 2),
      imageSize: new BMapGL.Size(600 / 2, 600 / 2)
    })
  };
  for (let i = 1; i <= 10; i++) {
    icons["red" + i] = new BMapGL.Icon(defaultIconUrl, new BMapGL.Size(42 / 2, 66 / 2), {
      imageOffset: new BMapGL.Size(42 / 2 * (i - 1), 0),
      imageSize: new BMapGL.Size(600 / 2, 600 / 2)
    });
  }
  for (let i = 1; i <= 10; i++) {
    icons["blue" + i] = new BMapGL.Icon(defaultIconUrl, new BMapGL.Size(42 / 2, 66 / 2), {
      imageOffset: new BMapGL.Size(42 / 2 * (i - 1), 132 / 2),
      imageSize: new BMapGL.Size(600 / 2, 600 / 2)
    });
  }
  return icons;
}

// node_modules/vue3-baidu-map-gl/es/hooks/useInstanceId.js
function useInstanceId() {
  const instanceId = getUid();
  provide("parentComponentId", instanceId);
  return instanceId;
}

// node_modules/vue3-baidu-map-gl/es/components/index.js
var components_exports = {};
__export(components_exports, {
  BAutoComplete: () => default25,
  BBezierCurve: () => default16,
  BCircle: () => default19,
  BCityList: () => default6,
  BContextMenu: () => default22,
  BControl: () => default3,
  BCopyright: () => default8,
  BDistrictLayer: () => default23,
  BGroundOverlay: () => default21,
  BInfoWindow: () => default18,
  BLabel: () => default14,
  BLocation: () => default7,
  BMap: () => default2,
  BMapMask: () => default24,
  BMarker: () => default12,
  BMarker3d: () => default13,
  BNavigation3d: () => default9,
  BPanoramaControl: () => default10,
  BPanoramaCoverageLayer: () => default11,
  BPolygon: () => default17,
  BPolyline: () => default15,
  BPrism: () => default20,
  BScale: () => default4,
  BZoom: () => default5
});
__reExport(components_exports, map_exports);
__reExport(components_exports, control_exports);
__reExport(components_exports, scale_exports);
__reExport(components_exports, zoom_exports);
__reExport(components_exports, city_list_exports);
__reExport(components_exports, location_exports);
__reExport(components_exports, copyright_exports);
__reExport(components_exports, navigation3d_exports);
__reExport(components_exports, panorama_control_exports);
__reExport(components_exports, panorama_coverage_exports);
__reExport(components_exports, marker_exports);
__reExport(components_exports, marker3d_exports);
__reExport(components_exports, label_exports);
__reExport(components_exports, polyline_exports);
__reExport(components_exports, bezierCurve_exports);
__reExport(components_exports, polygon_exports);
__reExport(components_exports, infowindow_exports);
__reExport(components_exports, circle_exports);
__reExport(components_exports, prism_exports);
__reExport(components_exports, ground_overlay_exports);
__reExport(components_exports, map_mask_exports);
__reExport(components_exports, contextMenu_exports);
__reExport(components_exports, district_exports);
__reExport(components_exports, autoComplete_exports);

// node_modules/vue3-baidu-map-gl/es/index.js
__reExport(es_exports, components_exports);
var vue3BaiduMapGl = {
  install: (app, options) => {
    const { ak, apiUrl, plugins: p, pluginsSourceLink: psl } = options || {};
    const appProp = app.config.globalProperties;
    for (const component of components) {
      const name = component.name;
      app.component(name, component);
    }
    ak && (appProp.$baiduMapAk = ak);
    apiUrl && (appProp.$baiduMapApiUrl = apiUrl);
    p && (appProp.$baiduMapPlugins = p);
    psl && (appProp.$baiduMapPluginsSourceLink = psl);
  },
  version: "2.3.2"
};
var install = vue3BaiduMapGl.install;
var version = vue3BaiduMapGl.version;
export {
  default25 as BAutoComplete,
  default16 as BBezierCurve,
  default19 as BCircle,
  default6 as BCityList,
  default22 as BContextMenu,
  default3 as BControl,
  default8 as BCopyright,
  default23 as BDistrictLayer,
  default21 as BGroundOverlay,
  default18 as BInfoWindow,
  default14 as BLabel,
  default7 as BLocation,
  default2 as BMap,
  default24 as BMapMask,
  default12 as BMarker,
  default13 as BMarker3d,
  default9 as BNavigation3d,
  default10 as BPanoramaControl,
  default11 as BPanoramaCoverageLayer,
  default17 as BPolygon,
  default15 as BPolyline,
  default20 as BPrism,
  default4 as BScale,
  default5 as BZoom,
  CoordinatesFromType,
  CoordinatesToType,
  DistrictType,
  vue3BaiduMapGl as default,
  install,
  useAddressGeocoder,
  useAreaBoundary,
  useBrowserLocation,
  useDefaultMarkerIcons,
  useInstanceId,
  useIpLocation,
  usePoint,
  usePointConvertor,
  usePointGeocoder,
  useTrackAnimation,
  useViewAnimation,
  version
};
//# sourceMappingURL=vue3-baidu-map-gl.js.map
